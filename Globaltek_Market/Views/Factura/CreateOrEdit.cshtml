@model Globaltek_Market.Infraestructure.Dtos.FacturaDto

@{
    ViewBag.Title = "Crear";
}

<h2>Generar Factura</h2>


@using (Html.BeginForm("Create", "Factura", FormMethod.Post, new { id = "formCrearFactura" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.NumeroFactura, "Numero de la factura", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NumeroFactura, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", id = "NumeroFactura" } })
            @Html.ValidationMessageFor(model => model.NumeroFactura, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Fecha, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Fecha, new { htmlAttributes = new { @class = "form-control", id = "Fecha", type = "date" } })
            @Html.ValidationMessageFor(model => model.Fecha, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TipoDePago, "Tipo de pago", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.TipoDePago, ViewBag.OpcionesTipoDePago as SelectList, "Seleccione un tipo de pago", new { @class = "form-control",id= "TipoDePago" })
            @Html.ValidationMessageFor(model => model.TipoDePago, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DocumentoCliente, "Documento cliente", htmlAttributes: new { @class = "control-label col-md-2 " })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DocumentoCliente, new { htmlAttributes = new { @class = "form-control", id = "DocumentoCliente" } })
            @Html.ValidationMessageFor(model => model.DocumentoCliente, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NombreCliente, "Nombre Cliente", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NombreCliente, new { htmlAttributes = new { @class = "form-control",id= "NombreCliente" } })
            @Html.ValidationMessageFor(model => model.NombreCliente, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Subtotal, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Subtotal, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", id = "Subtotal" } })
            @Html.ValidationMessageFor(model => model.Subtotal, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Descuento, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Descuento, new { htmlAttributes = new { @class = "form-control", id = "Descuento" } })
            @Html.ValidationMessageFor(model => model.Descuento, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IVA, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.IVA, new { htmlAttributes = new { @class = "form-control", id = "Impuesto" } })
            @Html.ValidationMessageFor(model => model.IVA, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TotalDescuento, "Total descuento", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TotalDescuento, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", id = "TotalDescuento" } })
            @Html.ValidationMessageFor(model => model.TotalDescuento, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TotalImpuesto, "Total impuesto", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TotalImpuesto, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", id = "TotalImpuesto" } })
            @Html.ValidationMessageFor(model => model.TotalImpuesto, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Total, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", id = "Total" } })
            @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="modal-body">
        <ul id="errorList"></ul>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Generar Factura" class="btn btn-default" />  
            <input type="button" value="Limpiar" class="btn btn-default" id="limpiarCamposFactura" />
        </div>
    </div>

    
</div>
}

<h2>Crear Detalle</h2>

@using (Html.BeginForm("CrearDetalle", "Factura", FormMethod.Post, new { id = "formCrearDetalle" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <!-- Campos del formulario -->
    <div class="form-group">
        @Html.LabelFor(model => model.IdProducto, "Producto", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.IdProducto, ViewBag.Productos as SelectList, "Seleccione un producto", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.IdProducto, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Cantidad, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Cantidad, new { htmlAttributes = new { @class = "form-control", id = "Cantidad" } })
            @Html.ValidationMessageFor(model => model.Cantidad, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PrecioUnitario, "Precio Unitario", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PrecioUnitario, new { htmlAttributes = new { @class = "form-control", id = "PrecioUnitario" } })
            @Html.ValidationMessageFor(model => model.PrecioUnitario, "", new { @class = "text-danger" })
        </div>
    </div>
   
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Crear" class="btn btn-primary" />
        </div>
    </div>
</div>
}

<table id="tablaDetalles" class="table">
    <thead>
        <tr>
            <th>ID</th>
            <th>Factura</th>
            <th>Producto</th>
            <th>Cantidad</th>
            <th>Precio Unitario</th>
            <th>Subtotal</th>
        </tr>
    </thead>
    <tbody>
        <!-- Aquí se agregarán los detalles creados -->
    </tbody>
</table>

<div>
    @Html.ActionLink("Regresar al listado", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>

    </script>
    <script src="~/Scripts/factura-Script.js"></script>
}
